version: '3.7'

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - './frontend:/app'
      - '/app/node_modules'
    ports:
      - 4000:4000
    environment:
      - CHOKIDAR_USEPOLLING=true
      - PORT=4000
    env_file:
      - ./frontend/.env.staging

  db:
    image: postgres:12
    env_file:
      - ./services/.env.production
    ports:
      - "5433:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/:/docker-entrypoint-initdb.d/
    networks:
      - test_net

  data_service:
    build:
      context: ./services
      dockerfile: Dockerfile
    networks:
      - test_net
    environment:
      - environment=docker

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - test_net

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "Trades:3:1:delete,ShortPuts:2:1,ShortCreditSpreads:2:1,LongCallsPuts:3:1,EarningsPlays:3:1"
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:19092,OUTSIDE://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
    networks:
      - test_net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

volumes:
  db-data:

networks:
  test_net:
